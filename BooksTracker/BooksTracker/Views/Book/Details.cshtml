
@{
    ViewData["Title"] = "Details";
}

<!-- If no get parameter "id" was supplied, render "No book selected."
        If an "id" get parameter was supplied, use GetBookByID() and render:
        "You checked out {title} on {CheckedOutDate}, and it {is/was} due on {DueDate}."
        Use conditional rendering to make a choice about using 'is' or 'was' based on today's date.
        A button that will call ExtendDueDateForBookByID().
        A button that will call DeleteBookByID().-->

<h1>Details</h1>
@{
    if (ViewBag.Book.ID == null)
    {
        <p class="alert-danger">No Book Selected: @(ViewBag.Error)</p>
    }
    else if (ViewBag.Book.ID != null)
    {
        //You checked out {title} on {CheckedOutDate}, and it {is/was} due on {DueDate}.
        <p>
            You checked out @(ViewBag.Book.Title) on @(ViewBag.Book.CheckedOutDate), and it {is/was} due on @(ViewBag.Book.DueDate).
        </p>
    }
}
<h1>Details- @(ViewBag.Book.ID)</h1>
<p>Title: @(ViewBag.Book.Title)</p>
<p>Author: @(ViewBag.Book.Author)</p>
<p>PublicationDate: @(ViewBag.Book.PublicationDate)</p>
<p>CheckOutDate: @(ViewBag.Book.CheckOutDate)</p>
<p>DueDate: @(ViewBag.Book.DueDate)</p>
<a href="/Book/Details?id=@(ViewBag.Book.ID)&delete=true">Delete @(ViewBag.Book.Title)</a>
<a href="/Book/Details?id=@(ViewBag.Book.ID)&ExtendDueDate=true">ExtendDueDate @(ViewBag.Book.Title)</a>

<!-- // Code borowed: https://github.com/TECHCareers-by-Manpower/4.1-MVC/tree/master/MVC_4Point1 -->
